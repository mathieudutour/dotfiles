# Local/private config goes in the include
[include]
        path = ~/.gitconfig.local
[hub]
        protocol = https
[alias]
        # Remove all branches which have been squashed to main
        clean-squashed = "!main=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'); git checkout -q main && git for-each-ref refs/heads/ \"--format=%(refname:short)\" | while read branch; do mergeBase=$(git merge-base $main $branch) && [[ $(git cherry $main $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == \"-\"* ]] && git branch -D $branch; done"
        # UI to checkout the recent branches
        cor = !git for-each-ref --sort=-committerdate --format='%(refname:short) (%(committerdate:relative))' refs/heads | fzf --reverse --height 35% --nth 1 | awk '{print $1}' | xargs git checkout
        # Checkout the fork/branch of a PR
        pr = "!f() { gh pr view $1 --json headRepositoryOwner,headRepository,headRefName,number --jq .headRepositoryOwner.login,.headRepository.name,.headRefName,.number | xargs -n 4 sh -c 'git remote add $3 https://github.com/$0/$1; git fetch $3; git checkout -b pr/$3 --track $3/$2'; }; f"
        # Clean up after having checked out the fork/branch of a PR
        clean-pr = "!f() { BRANCH_NAME=`git branch --show-current`; REMOTE_NAME=`echo $BRANCH_NAME | cut -d'/' -f2`; git remote remove $REMOTE_NAME; git checkout `git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@'`; git branch -D $BRANCH_NAME; }; f"
[color]
        ui = auto
[core]
        excludesfile = ~/.gitignore
        editor = vim
        pager = diff-so-fancy | less --tabs=2 -RFX
	ignorecase = false
[apply]
        whitespace = nowarn
[mergetool]
        keepBackup = false
[difftool]
        prompt = false
[help]
        autocorrect = 1
[push]
        # push easily. http://stackoverflow.com/a/23918418/89484
        default = current
[color "diff"]
        meta = yellow bold
        commit = green bold
        frag = magenta bold
        old = red bold
        new = green bold
        whitespace = red reverse
[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = "red bold 52"
        newNormal = "green bold"
        newHighlight = "green bold 22"
[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green
[color "status"]
        added = yellow
        changed = green
        untracked = cyan
[status]
        showUntrackedFiles = all
[filter "lfs"]
        required = true
        clean = git-lfs clean -- %f
        smudge = git-lfs smudge -- %f
        process = git-lfs filter-process
[init]
        defaultBranch = main
[pull]
        rebase = false
